.nh
.TH "UPTERM" "1" "Sep 2023" "Upterm 0.11.0" "Upterm Manual"

.SH NAME
.PP
upterm-host - Host a terminal session


.SH SYNOPSIS
.PP
\fBupterm host [flags]\fP


.SH DESCRIPTION
.PP
Host a terminal session over a reverse SSH tunnel to the Upterm server with the IO of the host and the client attaching to the IO of a command. By default, the command authenticates against the Upterm server using the private key files located at ~/.ssh/id_dsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519, and ~/.ssh/id_rsa. If no private key file is found, the command reads private keys from SSH Agent. If no private key is found from files or SSH Agent, the command falls back to generate one on the fly. To permit authorized clients to join, client public keys can be specified with --authorized-key.


.SH OPTIONS
.PP
\fB-a\fP, \fB--authorized-key\fP=""
	an authorized_keys file that lists public keys that are permitted to connect.

.PP
\fB-f\fP, \fB--force-command\fP=""
	force execution of a command and attach its input/output to client's.

.PP
\fB--github-user\fP=[]
	this GitHub user public keys are permitted to connect.

.PP
\fB--gitlab-user\fP=[]
	this GitLab user public keys are permitted to connect.

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for host

.PP
\fB--known-hosts\fP="/Users/owen/.ssh/known_hosts"
	a file contains the known keys for remote hosts (required).

.PP
\fB-i\fP, \fB--private-key\fP=[/Users/owen/.ssh/id_ed25519]
	private key file for public key authentication against the upterm server

.PP
\fB-r\fP, \fB--read-only\fP[=false]
	host a read-only session. Clients won't be able to interact.

.PP
\fB--server\fP="ssh://uptermd.upterm.dev:22"
	upterm server address (required), supported protocols are ssh, ws, or wss.

.PP
\fB--srht-user\fP=[]
	this SourceHut user public keys are permitted to connect.


.SH EXAMPLE
.PP
.RS

.nf
  # Host a terminal session that runs $SHELL with
  # client's input/output attaching to the host's
  upterm host

  # Host a terminal session that only allows specified public key(s) to connect
  upterm host --authorized-key PATH_TO_PUBLIC_KEY

  # Host a session with a custom command.
  upterm host -- docker run --rm -ti ubuntu bash

  # Host a session that runs 'tmux new -t pair-programming' and
  # force clients to join with 'tmux attach -t pair-programming'.
  # This is similar to tmate.
  upterm host --force-command 'tmux attach -t pair-programming' -- tmux new -t pair-programming

  # Use a different Uptermd server and host a session via WebSocket
  upterm host --server wss://YOUR_UPTERMD_SERVER -- YOUR_COMMAND

.fi
.RE


.SH SEE ALSO
.PP
\fBupterm(1)\fP


.SH HISTORY
.PP
30-Sep-2023 Auto generated by spf13/cobra
